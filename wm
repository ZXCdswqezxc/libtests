local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TextService = game:GetService("TextService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = playerGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Watermark
local watermark = Instance.new("Frame")
watermark.Name = "watermark"
watermark.Parent = ScreenGui
watermark.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
watermark.BorderColor3 = Color3.fromRGB(20, 20, 20)
watermark.BorderSizePixel = 0
watermark.Position = UDim2.new(0.459283382, 0, 0.524570048, 0) -- Default position
watermark.Size = UDim2.new(0, 120, 0, 20)

local stroke = Instance.new("UIStroke")
stroke.Name = "stroke"
stroke.Parent = watermark
stroke.Color = Color3.fromRGB(255, 0, 0)
stroke.Thickness = 2
stroke.Transparency = 0.3

local uiGradient = Instance.new("UIGradient")
uiGradient.Name = "uiGradient"
uiGradient.Parent = stroke
uiGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 100, 100)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 0))
})
uiGradient.Rotation = 45

local WmText = Instance.new("TextLabel")
WmText.Name = "WmText"
WmText.Parent = watermark
WmText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WmText.BackgroundTransparency = 1
WmText.BorderColor3 = Color3.fromRGB(0, 0, 0)
WmText.BorderSizePixel = 0
WmText.Size = UDim2.new(1, 0, 1, 0)
WmText.Font = Enum.Font.Sarpanch
WmText.TextColor3 = Color3.fromRGB(255, 255, 255)
WmText.TextSize = 16
WmText.Text = ""

-- Preset positions
local presets = {
    TopLeft = UDim2.new(0, 10, 0, 10), -- 10px padding from top-left
    TopRight = UDim2.new(1, -130, 0, 10), -- 10px from top, 130px from right (accounting for width)
    TopCenter = UDim2.new(0.5, -60, 0, 10) -- Centered horizontally, 10px from top
}

local currentPreset = "TopRight" -- Default preset

-- Function to apply preset position
local function setWatermarkPreset(presetName)
    if presets[presetName] then
        watermark.Position = presets[presetName]
        currentPreset = presetName
    end
end

-- Function to cycle through presets (for keybind)
local function cyclePresets()
    local presetOrder = {"TopLeft", "TopRight", "TopCenter"}
    local currentIndex = table.find(presetOrder, currentPreset) or 1
    local nextIndex = (currentIndex % #presetOrder) + 1
    setWatermarkPreset(presetOrder[nextIndex])
end

-- Function to calculate text bounds and scale frame
local function scaleFrameToText(frame, textLabel)
    local text = textLabel.Text
    local font = textLabel.Font
    local textSize = textLabel.TextSize
    local textBounds = TextService:GetTextSize(text, textSize, font, Vector2.new(math.huge, math.huge))
    
    -- Add padding (10 pixels on X, 5 pixels on Y)
    local newWidth = textBounds.X + 10
    local newHeight = textBounds.Y + 5
    
    frame.Size = UDim2.new(0, newWidth, 0, newHeight)
end

-- Dragging functionality
local function makeDraggable(frame)
    local dragging = false
    local dragInput, dragStart, startPos

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            currentPreset = nil -- Disable preset when dragging

            local connection
            connection = input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                    connection:Disconnect()
                end
            end)
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
end

makeDraggable(watermark)

-- Keybind to cycle presets (e.g., press 'P' to cycle)
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if not gameProcessedEvent and input.KeyCode == Enum.KeyCode.P then
        cyclePresets()
    end
end)

-- FPS calculation (updated every 3 seconds)
local lastFpsUpdate = 0
local fps = 0
local function calculateFps()
    local currentTime = tick()
    if currentTime - lastFpsUpdate >= 3 then
        fps = math.floor(1 / RunService.RenderStepped:Wait())
        lastFpsUpdate = currentTime
    end
end

-- Update watermark (FPS, date, username)
local function updateWatermark()
    calculateFps()
    local date = os.date("%Y-%m-%d %H:%M:%S")
    WmText.Text = string.format("replace.gg | FPS: %d | %s | %s", fps, date, player.Name)
    scaleFrameToText(watermark, WmText)
end

-- Update loop
RunService.RenderStepped:Connect(function()
    updateWatermark()
end)
